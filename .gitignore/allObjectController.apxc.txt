public class allObjectController {
    @AuraEnabled 
    public static List<wrapperObject> GetObjectList(){
        List<wrapperObject> ListstdObjectNames = new List<wrapperObject>();
        Map<String, Schema.SObjectType> gd = Schema.getGlobalDescribe();
        for ( Schema.SObjectType typ : Schema.getGlobalDescribe().values() ) {
            wrapperObject stdObjectNames = new wrapperObject();
            stdObjectNames.apiName=typ.getDescribe().getName();
            stdObjectNames.name=typ.getDescribe().getLabel();
            ListstdObjectNames.add(stdObjectNames);
        }
        return ListstdObjectNames;
    }
    @AuraEnabled 
    public static List<wrapperObject> GetFieldList(String objectName){
        system.debug('objectName:'+objectName);
        List<wrapperObject> ListFields = new List<wrapperObject>();
        Map <String, Schema.SObjectField> fieldMap = Schema.getGlobalDescribe().get(objectName).getDescribe().fields.getMap();
        for(Schema.SObjectField sfield : fieldMap.Values())
        {
            wrapperObject fieldDetail = new wrapperObject();
            schema.describefieldresult dfield = sfield.getDescribe();
            fieldDetail.fieldLable= dfield.getLabel ();
            fieldDetail.fieldType=dfield.getType ()+'';
            ListFields.add(fieldDetail);
        }
        return ListFields;
    } 
    public class wrapperObject
    {
        @AuraEnabled
        public String Name{get;set;}
        @AuraEnabled
        public String apiName{get;set;}
        @AuraEnabled
        public String fieldLable{get;set;}
        @AuraEnabled
        public String fieldType{get;set;}
    }
}